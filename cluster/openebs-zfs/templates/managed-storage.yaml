{{- range .Values.managedStorages }}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ .name }} # some unique name
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: {{ .size }} # size of the volume
  csi:
    driver: zfs.csi.openebs.io
    fsType: zfs
    volumeAttributes:
      openebs.io/poolname: {{ $.Values.zfs.poolName }} # change the pool name accordingly
    volumeHandle: {{ $.Values.zfs.datasetPrefix}}{{ .name }} # This should be same as the zfs volume name
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: openebs.io/nodeid
              operator: In
              values:
                - {{ $.Values.zfs.nodeId }}
  persistentVolumeReclaimPolicy: Retain
  storageClassName: zfs-localpv
  volumeMode: Filesystem

---

apiVersion: zfs.openebs.io/v1
kind: ZFSVolume
metadata:
  name: {{ $.Values.zfs.datasetPrefix}}{{ .name }}
  # By default, ZFSVolumes come with the finalizer `zfs.openebs.io/finalizer`.
  # We do not add this, as this causes OpenEBS to actually delete the dataset including all snapshots.
  # As additional failsafe we add the `manual` finalizer. This requires manual deletion of the finalizer
  # to actual delete the ZFSVolume resource from K8s.
  finalizers:
    - manual
spec:
  capacity: {{ int (trimSuffix "Gi" .size |  mulf 1073741824) | quote}}
  fsType: zfs
  ownerNodeID: {{ $.Values.zfs.nodeId }}
  poolName: {{ $.Values.zfs.poolName }}
  shared: 'yes'
  volumeType: DATASET

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .name }}-pvc
  namespace: {{ .namespace }}
spec:
  storageClassName: zfs-localpv
  volumeName: {{ .name }}
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .size }}

---

{{- end }}